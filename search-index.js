var searchIndex = JSON.parse('{\
"bls_ringct":{"doc":"","t":[2,2,2,2,2,6,3,2,2,11,12,2,2,11,11,11,11,11,0,11,11,11,2,5,11,5,0,5,2,0,11,11,11,11,11,11,12,11,13,4,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,3,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,12,11,11,12,11,11,12,12,11,11,12,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,3,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["DecoyInput","Error","MlsagMaterial","MlsagSignature","Output","Result","RevealedCommitment","RingCtMaterial","TrueInput","blinding","blinding","bls_bulletproofs","blstrs","borrow","borrow_mut","clone","clone_into","commit","error","fmt","from","from_value","group","hash_to_curve","into","key_image","mlsag","public_key","rand","ringct","to_bytes","to_owned","try_from","try_into","type_id","value","value","vzip","BulletProofs","Error","ExpectedAPublicCommitmentsForEachRingEntry","InputPseudoCommitmentsDoNotSumToOutputCommitments","InvalidHiddenCommitmentInRing","InvalidRingSignature","KeyImageNotOnCurve","KeyImageNotUniqueAcrossInputs","PublicKeyNotUniqueAcrossInputs","TransactionMustHaveAnInput","borrow","borrow_mut","clone","clone_into","eq","fmt","fmt","from","from","into","provide","source","to_owned","to_string","try_from","try_into","type_id","vzip","0","DecoyInput","MlsagMaterial","MlsagSignature","TrueInput","alpha","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c0","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","commitment","commitment","commitments","count_inputs","decoy_inputs","eq","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","key_image","key_image","new","new","pi","pi_base","pseudo_commitment","pseudo_commitment","public_key","public_key","public_key","public_keys","public_keys","r","r","random_pseudo_commitment","revealed_commitment","revealed_commitment","ring","secret_key","sign","to_bytes","to_owned","to_owned","to_owned","to_owned","true_input","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","Amount","Output","OutputProof","RingCtMaterial","RingCtTransaction","amount","amount","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","commitment","default","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","gen_message","hash","initialize","inputs","into","into","into","into","key_images","mlsags","new","outputs","outputs","partial_cmp","public_key","public_key","public_key","public_keys","random_commitment","range_proof","sign","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip"],"q":["bls_ringct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bls_ringct::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","bls_ringct::error::Error","bls_ringct::mlsag","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bls_ringct::ringct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Construct a revealed commitment from a value, generating a …","","Hashes a point to another point on the G1 curve","Calls <code>U::from(self)</code>.","returns KeyImage for the given public/secret key pair A …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Computes the Key Image for this inputs keypair A key image …","","","","","","","","","","","","","","","Generate a pseudo-commitment to the input amount","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a Dbc’s value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Generate a commitment to the input amount","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,1,1,1,0,1,1,1,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,36,0,0,0,0,23,21,22,23,24,21,22,23,24,24,21,22,23,24,21,22,23,24,22,22,23,23,23,24,21,22,23,24,21,22,23,24,21,22,23,24,21,24,21,23,23,23,24,24,21,22,22,23,24,23,24,21,21,21,24,21,23,24,21,22,23,24,23,21,22,23,24,21,22,23,24,21,22,23,24,24,21,22,23,24,0,0,0,0,0,28,28,28,30,31,32,28,30,31,32,30,28,30,31,32,28,30,31,32,32,31,30,31,32,28,30,31,32,28,30,31,32,32,32,30,30,28,30,31,32,30,32,28,30,32,32,28,31,28,30,28,31,30,31,32,28,30,31,32,28,30,31,32,28,30,31,32,28,30,31,32,32,28,30,31,32],"f":[0,0,0,0,0,0,0,0,0,[1,2],0,0,0,[[]],[[]],[1,1],[[]],[[1,3],4],0,[[1,5],6],[[]],[[7,8],1],0,[4,4],[[]],[[[9,[2]]],4],0,[[[9,[2]]],4],0,0,[1,[[11,[10]]]],[[]],[[],12],[[],12],[[],13],[1,7],0,[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[14,14],[[]],[[14,14],15],[[14,5],6],[[14,5],6],[[]],[16,14],[[]],[17],[14,[[19,[18]]]],[[]],[[],20],[[],12],[[],12],[[],13],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[21,21],[22,22],[23,23],[24,24],[[]],[[]],[[]],[[]],[22,25],0,[[23,3],[[11,[25]]]],[23,26],0,[[24,24],15],[[21,5],6],[[22,5],6],[[23,5],6],[[24,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,4],0,[[[9,[2]],1],21],[[21,[11,[22]],8],23],[23,26],0,[24,25],0,[21,4],[22,25],0,[23,[[11,[25]]]],[24,[[11,[25]]]],0,0,[[21,8],1],[21,1],0,0,0,[[23,1,3],24],[24,[[11,[10]]]],[[]],[[]],[[]],[[]],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[24,27],[[]],[[]],[[]],[[]],0,0,0,0,0,[28,29],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,28],[30,30],[31,31],[32,32],[[]],[[]],[[]],[[]],[[32,32],33],[31,25],[[],30],[[31,31],15],[[32,32],15],[[28,5],6],[[30,5],6],[[31,5],6],[[32,5],6],[[]],[[]],[[]],[[]],[32,[[11,[10]]]],[32],[[]],0,[[]],[[]],[[]],[[]],[30,[[11,[25]]]],0,[[[9,[25]],29],28],0,0,[[32,32],[[19,[33]]]],[28,25],[31,25],0,[30,[[11,[25]]]],[[28,8],1],[31,34],[[30,[0,[8,35]]],27],[31,[[11,[10]]]],[32,[[11,[10]]]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[32,27],[[]],[[]],[[]],[[]]],"p":[[3,"RevealedCommitment"],[3,"Scalar"],[3,"PedersenGens"],[3,"G1Projective"],[3,"Formatter"],[6,"Result"],[15,"u64"],[8,"RngCore"],[8,"Into"],[15,"u8"],[3,"Vec"],[4,"Result"],[3,"TypeId"],[4,"Error"],[15,"bool"],[4,"ProofError"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"String"],[3,"TrueInput"],[3,"DecoyInput"],[3,"MlsagMaterial"],[3,"MlsagSignature"],[3,"G1Affine"],[15,"usize"],[6,"Result"],[3,"Output"],[6,"Amount"],[3,"RingCtMaterial"],[3,"OutputProof"],[3,"RingCtTransaction"],[4,"Ordering"],[3,"RangeProof"],[8,"CryptoRng"],[13,"BulletProofs"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
