var searchIndex = JSON.parse('{\
"bls_ringct":{"doc":"","t":[2,2,2,2,2,6,3,2,2,11,12,2,2,11,11,11,11,11,0,11,11,11,2,5,11,5,0,5,2,0,11,11,11,11,11,11,12,11,13,4,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,3,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,12,11,11,12,11,11,12,12,11,11,12,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,3,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["DecoyInput","Error","MlsagMaterial","MlsagSignature","Output","Result","RevealedCommitment","RingCtMaterial","TrueInput","blinding","blinding","bls_bulletproofs","blstrs","borrow","borrow_mut","clone","clone_into","commit","error","fmt","from","from_value","group","hash_to_curve","into","key_image","mlsag","public_key","rand","ringct","to_bytes","to_owned","try_from","try_into","type_id","value","value","vzip","BulletProofs","Error","ExpectedAPublicCommitmentsForEachRingEntry","InputPseudoCommitmentsDoNotSumToOutputCommitments","InvalidHiddenCommitmentInRing","InvalidRingSignature","KeyImageNotOnCurve","KeyImageNotUniqueAcrossInputs","PublicKeyNotUniqueAcrossInputs","TransactionMustHaveAnInput","borrow","borrow_mut","clone","clone_into","eq","fmt","fmt","from","from","into","ne","source","to_owned","to_string","try_from","try_into","type_id","vzip","0","DecoyInput","MlsagMaterial","MlsagSignature","TrueInput","alpha","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c0","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","commitment","commitment","commitments","count_inputs","decoy_inputs","eq","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","key_image","key_image","ne","new","new","pi","pi_base","pseudo_commitment","pseudo_commitment","public_key","public_key","public_key","public_keys","public_keys","r","r","random_pseudo_commitment","revealed_commitment","revealed_commitment","ring","secret_key","sign","to_bytes","to_owned","to_owned","to_owned","to_owned","true_input","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","Amount","Output","OutputProof","RingCtMaterial","RingCtTransaction","amount","amount","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","commitment","default","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","gen_message","hash","initialize","inputs","into","into","into","into","key_images","mlsags","ne","ne","new","outputs","outputs","partial_cmp","public_key","public_key","public_key","public_keys","random_commitment","range_proof","sign","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip"],"q":["bls_ringct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bls_ringct::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","bls_ringct::error::Error","bls_ringct::mlsag","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bls_ringct::ringct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Construct a revealed commitment from a value, generating a …","","Hashes a point to another point on the G1 curve","Calls <code>U::from(self)</code>.","returns KeyImage for the given public/secret key pair A …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Computes the Key Image for this inputs keypair A key image …","","","","","","","","","","","","","","","","Generate a pseudo-commitment to the input amount","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a Dbc’s value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Generate a commitment to the input amount","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,1,1,1,0,1,1,1,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,0,0,0,0,4,5,6,4,7,5,6,4,7,7,5,6,4,7,5,6,4,7,6,6,4,4,4,7,5,6,4,7,5,6,4,7,5,6,4,7,5,7,7,5,4,4,4,7,7,5,6,6,4,7,4,7,5,5,5,7,5,4,7,5,6,4,7,4,5,6,4,7,5,6,4,7,5,6,4,7,7,5,6,4,7,0,0,0,0,0,8,8,8,9,10,11,8,9,10,11,9,8,9,10,11,8,9,10,11,11,10,9,10,11,8,9,10,11,8,9,10,11,11,11,9,9,8,9,10,11,9,11,10,11,8,9,11,11,8,10,8,9,8,10,9,10,11,8,9,10,11,8,9,10,11,8,9,10,11,8,9,10,11,11,8,9,10,11],"f":[null,null,null,null,null,null,null,null,null,[[["revealedcommitment",3]],["scalar",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["revealedcommitment",3]],["revealedcommitment",3]],[[["",0],["",0]]],[[["revealedcommitment",3],["pedersengens",3]],["g1projective",3]],null,[[["revealedcommitment",3],["formatter",3]],["result",6]],[[]],[[["u64",0],["rngcore",8]],["revealedcommitment",3]],null,[[["g1projective",3]],["g1projective",3]],[[]],[[["into",8,[["scalar",3]]]],["g1projective",3]],null,[[["into",8,[["scalar",3]]]],["g1projective",3]],null,null,[[["revealedcommitment",3]],["vec",3,[["u8",0]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["revealedcommitment",3]],["u64",0]],null,[[]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["error",4]],["error",4]],[[["",0],["",0]]],[[["error",4],["error",4]],["bool",0]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["prooferror",4]],["error",4]],[[]],[[]],[[["error",4],["error",4]],["bool",0]],[[["error",4]],["option",4,[["error",8]]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["trueinput",3]],["trueinput",3]],[[["decoyinput",3]],["decoyinput",3]],[[["mlsagmaterial",3]],["mlsagmaterial",3]],[[["mlsagsignature",3]],["mlsagsignature",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["decoyinput",3]],["g1affine",3]],null,[[["mlsagmaterial",3],["pedersengens",3]],["vec",3,[["g1affine",3]]]],[[["mlsagmaterial",3]],["usize",0]],null,[[["mlsagsignature",3],["mlsagsignature",3]],["bool",0]],[[["trueinput",3],["formatter",3]],["result",6]],[[["decoyinput",3],["formatter",3]],["result",6]],[[["mlsagmaterial",3],["formatter",3]],["result",6]],[[["mlsagsignature",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["trueinput",3]],["g1projective",3]],null,[[["mlsagsignature",3],["mlsagsignature",3]],["bool",0]],[[["into",8,[["scalar",3]]],["revealedcommitment",3]],["trueinput",3]],[[["trueinput",3],["vec",3,[["decoyinput",3]]],["rngcore",8]],["mlsagmaterial",3]],[[["mlsagmaterial",3]],["usize",0]],null,[[["mlsagsignature",3]],["g1affine",3]],null,[[["trueinput",3]],["g1projective",3]],[[["decoyinput",3]],["g1affine",3]],null,[[["mlsagmaterial",3]],["vec",3,[["g1affine",3]]]],[[["mlsagsignature",3]],["vec",3,[["g1affine",3]]]],null,null,[[["trueinput",3],["rngcore",8]],["revealedcommitment",3]],[[["trueinput",3]],["revealedcommitment",3]],null,null,null,[[["mlsagmaterial",3],["revealedcommitment",3],["pedersengens",3]],["mlsagsignature",3]],[[["mlsagsignature",3]],["vec",3,[["u8",0]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["mlsagsignature",3]],["result",6]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[["output",3]],["amount",6]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["output",3]],["output",3]],[[["ringctmaterial",3]],["ringctmaterial",3]],[[["outputproof",3]],["outputproof",3]],[[["ringcttransaction",3]],["ringcttransaction",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["ringcttransaction",3],["ringcttransaction",3]],["ordering",4]],[[["outputproof",3]],["g1affine",3]],[[],["ringctmaterial",3]],[[["outputproof",3],["outputproof",3]],["bool",0]],[[["ringcttransaction",3],["ringcttransaction",3]],["bool",0]],[[["output",3],["formatter",3]],["result",6]],[[["ringctmaterial",3],["formatter",3]],["result",6]],[[["outputproof",3],["formatter",3]],["result",6]],[[["ringcttransaction",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["ringcttransaction",3]],["vec",3,[["u8",0]]]],[[["ringcttransaction",3]]],[[["",0]]],null,[[]],[[]],[[]],[[]],[[["ringctmaterial",3]],["vec",3,[["g1affine",3]]]],null,[[["outputproof",3],["outputproof",3]],["bool",0]],[[["ringcttransaction",3],["ringcttransaction",3]],["bool",0]],[[["into",8,[["g1affine",3]]],["amount",6]],["output",3]],null,null,[[["ringcttransaction",3],["ringcttransaction",3]],["option",4,[["ordering",4]]]],[[["output",3]],["g1affine",3]],[[["outputproof",3]],["g1affine",3]],null,[[["ringctmaterial",3]],["vec",3,[["g1affine",3]]]],[[["output",3],["rngcore",8]],["revealedcommitment",3]],[[["outputproof",3]],["rangeproof",3]],[[["ringctmaterial",3],["",26,[["rngcore",8],["cryptorng",8]]]],["result",6]],[[["outputproof",3]],["vec",3,[["u8",0]]]],[[["ringcttransaction",3]],["vec",3,[["u8",0]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["ringcttransaction",3]],["result",6]],[[]],[[]],[[]],[[]]],"p":[[3,"RevealedCommitment"],[4,"Error"],[13,"BulletProofs"],[3,"MlsagMaterial"],[3,"TrueInput"],[3,"DecoyInput"],[3,"MlsagSignature"],[3,"Output"],[3,"RingCtMaterial"],[3,"OutputProof"],[3,"RingCtTransaction"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
